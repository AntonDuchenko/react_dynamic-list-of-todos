{"version":3,"sources":["types/Select.ts","context/TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","defaultTodo","id","title","completed","userId","TodosContext","createContext","show","setShow","selectedTodo","setSelectedTodo","filterField","setFilterField","query","setQuery","TodoProvider","children","useState","preparedValue","useMemo","Provider","value","TodoItem","todo","useContext","className","classNames","onClick","type","TodoList","todos","map","TodoFilter","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUser","setSelectedUser","useEffect","getUser","user","href","email","name","App","setTodos","todosFromSetver","visibleTodos","listOfTodos","preparedTodos","filter","queryNormalize","toLowerCase","includes","prepareTodos","length","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,0ECICC,EAAc,CACzBC,GAAI,EACJC,MAAO,GACPC,WAAW,EACXC,OAAQ,GAGGC,EAAeC,wBAA2B,CACrDC,MAAM,EACNC,QAAS,aACTC,aAAcT,EACdU,gBAAiB,aACjBC,YAAa,MACbC,eAAgB,aAChBC,MAAO,GACPC,SAAU,eAOCC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,EAAwBC,oBAAkB,GAA1C,mBAAOV,EAAP,KAAaC,EAAb,KACA,EAAwCS,mBAAejB,GAAvD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAsCO,mBAAS,OAA/C,mBAAON,EAAP,KAAoBC,EAApB,KACA,EAA0BK,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KAEMI,EAAgBC,mBAAQ,iBAAO,CACnCZ,OACAC,UACAC,eACAC,kBACAC,cACAC,iBACAC,QACAC,cACE,CAACH,EAAaJ,EAAME,EAAcI,IAEtC,OACE,cAACR,EAAae,SAAd,CAAuBC,MAAOH,EAA9B,SACGF,KCpCMM,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCtB,EAGEsB,EAHFtB,GACAC,EAEEqB,EAFFrB,MACAC,EACEoB,EADFpB,UAGF,EAAmDqB,qBAAWnB,GAAtDG,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,gBAAiBD,EAAlC,EAAkCA,aAElC,OACE,qBAAI,UAAQ,OAAOgB,UAAU,GAA7B,UACE,oBAAIA,UAAU,eAAd,SAA8BxB,IAC9B,oBAAIwB,UAAU,eAAd,SACGtB,GACC,sBAAMsB,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWC,IAAW,CACvB,mBAAoBvB,EACpB,mBAAoBA,IAFtB,SAKGD,MAGL,oBAAIuB,UAAU,8BAAd,SACE,wBACEE,QAAS,WACPnB,GAAQ,GACRE,EAAgBa,IAElB,UAAQ,eACRE,UAAU,SACVG,KAAK,SAPP,SASE,sBAAMH,UAAU,OAAhB,SACE,mBAAGA,UAAWC,IAAW,MACvB,CAAE,eAAgBjB,EAAaR,KAAOsB,EAAKtB,IAC3C,CAAE,SAAUQ,EAAaR,KAAOsB,EAAKtB,iBC1CtC4B,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,wBAAOL,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGK,EAAMC,KAAI,SAAAR,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKtB,c,SH5BVF,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KIIL,IAAMiC,EAAa,WACxB,MAA4CR,qBAAWnB,GAA/CO,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,SAE/B,OACE,uBAAMW,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACEQ,SAAU,SAAAC,GAAK,OAAItB,EAAesB,EAAMC,OAAOd,QAC/C,UAAQ,eAFV,UAIE,wBAAQA,MAAOtB,EAAOqC,IAAtB,iBACA,wBAAQf,MAAOtB,EAAOsC,OAAtB,oBACA,wBAAQhB,MAAOtB,EAAOuC,UAAtB,8BAKN,oBAAGb,UAAU,qDAAb,UACE,uBACEQ,SAAU,SAAAC,GAAK,OAAIpB,EAASoB,EAAMC,OAAOd,QACzC,UAAQ,cACRA,MAAOR,EACPe,KAAK,OACLH,UAAU,QACVc,YAAY,cAEd,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdZ,GACC,sBAAMY,UAAU,gBAAgBe,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLH,UAAU,SACVE,QAAS,kBAAMb,EAAS,gBCvCzB4B,G,MAAmB,kBAC9B,qBAAKjB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASkB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IClBMC,EAAsB,WACjC,MAAmD9B,qBAAWnB,GAAtDI,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,QAASE,EAA/B,EAA+BA,gBAC/B,EAAwCO,mBAAsB,MAA9D,mBAAOsC,EAAP,KAAqBC,EAArB,KAGEvD,EAIEQ,EAJFR,GACAG,EAGEK,EAHFL,OACAF,EAEEO,EAFFP,MACAC,EACEM,EADFN,UAGFsD,qBAAU,YDSW,SAACrD,GAAD,OAAoBuC,EAAG,iBAAiBvC,KCR3DsD,CAAQtD,GAAQ8C,MAAK,SAAAS,GAAI,OAAIH,EAAgBG,QAC5C,CAACvD,IAOJ,OACE,sBAAKqB,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb8B,EAGA,sBAAK9B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYxB,KAIZ,wBACE0B,QAvBS,WACnBnB,GAAQ,GACRE,EAAgBV,IAsBN4B,KAAK,SACLH,UAAU,SACV,UAAQ,mBAIZ,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGvB,IAGH,oBAAGuB,UAAU,QAAQ,UAAQ,aAA7B,UACGtB,EACC,wBAAQsB,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAGmC,KAAI,iBAAYL,EAAaM,OAAhC,SACGN,EAAaO,gBAnCtB,cAAC,EAAD,QCjBKC,EAAgB,WAC3B,MAA0B9C,mBAAiB,IAA3C,mBAAOa,EAAP,KAAckC,EAAd,KAEAP,qBAAU,WFOkBd,EAAY,UEN3BO,MAAK,SAAAe,GAAe,OAAID,EAASC,SAG9C,MAAqCzC,qBAAWnB,GAAxCE,EAAR,EAAQA,KAAMI,EAAd,EAAcA,YAAaE,EAA3B,EAA2BA,MA4B3B,IAAMqD,EA1BN,SAAsBC,GACpB,IAAIC,EAAa,YAAOD,GAexB,GAbAC,EAAgBA,EAAcC,QAAO,SAAA9C,GACnC,OAAQZ,GACN,KAAKZ,EAAOsC,OACV,OAAQd,EAAKpB,UAEf,KAAKJ,EAAOuC,UACV,OAAOf,EAAKpB,UAEd,QACE,OAAOoB,MAITV,EAAO,CACT,IAAMyD,EAAiBzD,EAAM0D,cAE7BH,EAAgBA,EACbC,QAAO,SAAA9C,GAAI,OAAIA,EAAKrB,MAAMqE,cAAcC,SAASF,MAGtD,OAAOF,EAGYK,CAAa3C,GAElC,OACE,qCACE,qBAAKL,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACIK,EAAM4C,OAEJ,cAAC,EAAD,CAAU5C,MAAOoC,IADjB,cAAC,EAAD,aAOX3D,GAAQ,cAAC,EAAD,QCnEfoE,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cdb3ae99.chunk.js","sourcesContent":["export enum Select {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { createContext, useMemo, useState } from 'react';\nimport { TodoContext } from '../types/TodoContext';\nimport { Todo } from '../types/Todo';\n\nexport const defaultTodo = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const TodosContext = createContext<TodoContext>({\n  show: false,\n  setShow: () => {},\n  selectedTodo: defaultTodo,\n  setSelectedTodo: () => {},\n  filterField: 'All',\n  setFilterField: () => {},\n  query: '',\n  setQuery: () => {},\n});\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [show, setShow] = useState<boolean>(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(defaultTodo);\n  const [filterField, setFilterField] = useState('All');\n  const [query, setQuery] = useState('');\n\n  const preparedValue = useMemo(() => ({\n    show,\n    setShow,\n    selectedTodo,\n    setSelectedTodo,\n    filterField,\n    setFilterField,\n    query,\n    setQuery,\n  }), [filterField, show, selectedTodo, query]);\n\n  return (\n    <TodosContext.Provider value={preparedValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../context/TodosContext';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const { setShow, setSelectedTodo, selectedTodo } = useContext(TodosContext);\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          onClick={() => {\n            setShow(true);\n            setSelectedTodo(todo);\n          }}\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n        >\n          <span className=\"icon\">\n            <i className={classNames('far',\n              { 'fa-eye-slash': selectedTodo.id === todo.id },\n              { 'fa-eye': selectedTodo.id !== todo.id })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodosContext } from '../../context/TodosContext';\nimport { Select } from '../../types/Select';\n\nexport const TodoFilter = () => {\n  const { setFilterField, query, setQuery } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={event => setFilterField(event.target.value)}\n            data-cy=\"statusSelect\"\n          >\n            <option value={Select.All}>All</option>\n            <option value={Select.Active}>Active</option>\n            <option value={Select.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          onChange={event => setQuery(event.target.value)}\n          data-cy=\"searchInput\"\n          value={query}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { TodosContext, defaultTodo } from '../../context/TodosContext';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, setShow, setSelectedTodo } = useContext(TodosContext);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId).then(user => setSelectedUser(user));\n  }, [userId]);\n\n  const handlerClick = () => {\n    setShow(false);\n    setSelectedTodo(defaultTodo);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={handlerClick}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosContext } from './context/TodosContext';\nimport { Select } from './types/Select';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(todosFromSetver => setTodos(todosFromSetver));\n  });\n\n  const { show, filterField, query } = useContext(TodosContext);\n\n  function prepareTodos(listOfTodos: Todo[]) {\n    let preparedTodos = [...listOfTodos];\n\n    preparedTodos = preparedTodos.filter(todo => {\n      switch (filterField) {\n        case Select.Active:\n          return !todo.completed;\n\n        case Select.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n    if (query) {\n      const queryNormalize = query.toLowerCase();\n\n      preparedTodos = preparedTodos\n        .filter(todo => todo.title.toLowerCase().includes(queryNormalize));\n    }\n\n    return preparedTodos;\n  }\n\n  const visibleTodos = prepareTodos(todos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : <TodoList todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {show && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './context/TodosContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}